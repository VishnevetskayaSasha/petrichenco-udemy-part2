{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,OAAO;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,SAAS;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C,sDAAsD;AACtD,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACxHgC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,SAAS,SAAS,SAAS;AAC3D,sDAAsD,UAAU;AAChE,oDAAoD,UAAU;AAC9D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,IAAI,+DAAW;AACf;AACA;AACA,2BAA2B,iCAAiC;AAC5D;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;ACtF4B;AACA;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,iDAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,0EAA0E;AAC1E;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,+CAA+C;AAC/C,kCAAkC;AAClC,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,YAAY,6DAAQ;AACpB,4BAA4B;AAC5B;AACA;AACA,wCAAwC;AACxC,aAAa;AACb;AACA,aAAa;AACb,8BAA8B;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC;AAClC,4CAA4C;AAC5C;AACA,kBAAkB;AAClB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,iDAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAU;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AC5HpB;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,qBAAqB;AACrB,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;AC/Dc;AACnC,iBAAiB,iFAAiF;AAClG;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,4BAA4B,gDAAQ;AACpC,8BAA8B,gDAAQ;AACtC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kCAAkC,gDAAQ;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,kCAAkC,gDAAQ;AAC1C;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA,sCAAsC,gDAAQ;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;AC1KrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;ACvCnB;AACA;AACA;AACA,mBAAmB,IAAI;AACvB,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC,oCAAoC;AACpC,2CAA2C;AAC3C;AACA;AACA;AACA,6DAA6D;AAC7D;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK,EAAC;;;;;;;;;;;;;;;;ACxErB;AACA,wCAAwC;AACxC,sCAAsC;AACtC;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,qCAAqC;AACrC,qCAAqC;AACrC;AACA;AACA;AACA,0DAA0D,IAAI,YAAY,WAAW;AACrF;AACA;AACA,gCAAgC;AAChC;AACA;AACkB;;;;;;;UCxBlB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNkC;AACE;AACA;AACA;AACF;AACE;AACE;AACM;AAC5C;AACA;AACA;AACA,wCAAwC,yDAAS;AACjD;AACA;AACA,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,yDAAI;AACR,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,CAAC,E","sources":["webpack://food/./js/modules/calc.js","webpack://food/./js/modules/cards.js","webpack://food/./js/modules/forms.js","webpack://food/./js/modules/modal.js","webpack://food/./js/modules/slider.js","webpack://food/./js/modules/tabs.js","webpack://food/./js/modules/timer.js","webpack://food/./js/services/services.js","webpack://food/webpack/bootstrap","webpack://food/webpack/runtime/define property getters","webpack://food/webpack/runtime/hasOwnProperty shorthand","webpack://food/webpack/runtime/make namespace object","webpack://food/./js/script.js"],"sourcesContent":["function calc() {\r\n    const result = document.querySelector(\".calculating__result span\");\r\n\r\n    let sex, height, weight, age, ratio; \r\n\r\n    // если в localStorage уже указан (сохранен) пол, записываем это значение в переменную sex\r\n    if(localStorage.getItem(\"sex\")) {\r\n        sex = localStorage.getItem(\"sex\");\r\n    } else { // если в localStorage еще не указан (не сохранен) пол, записываем значение поумолчанию female в переменную sex\r\n        sex = \"female\"\r\n        // и записываем в localStorage пол -- female\r\n        localStorage.setItem(\"sex\", \"female\");\r\n    }\r\n\r\n    if(localStorage.getItem(\"ratio\")) {\r\n        ratio = localStorage.getItem(\"ratio\");\r\n    } else {\r\n        ratio = 1.375\r\n        localStorage.setItem(\"ratio\", 1.375);\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        // перебираем все элементы \r\n        elements.forEach(elem => {\r\n            // удаляем у всех класс активности\r\n            elem.classList.remove(activeClass);\r\n            // если id элемента совпадает со значением sex в localStorage\r\n            if(elem.getAttribute(\"id\") === localStorage.getItem(\"sex\")) {\r\n                // добавляем этому элементу клас активности\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if(elem.getAttribute(\"data-ratio\") === localStorage.getItem(\"ratio\")) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings(\"#gender div\", \"calculating__choose-item_active\");\r\n    initLocalSettings(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n\r\n    function calcTotal() {\r\n        // если не выбрано хоть одно из полей, код дальше не пойдет\r\n        if(!sex || !height || !weight || !age || !ratio){\r\n            result.textContent = \"______\";\r\n            return;\r\n        }\r\n        // формула из инет для женщин и мудчин\r\n        if(sex ===\"female\") {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    // получаем данные статичных блоков \r\n    function getStaticInformation(selector,  activeClass) {\r\n        const elements = document.querySelectorAll(`${selector}`);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener(\"click\", (e) => {\r\n                if(e.target.getAttribute(\"data-ratio\")) {\r\n                    ratio = +e.target.getAttribute(\"data-ratio\");\r\n                    // записываем значение в localStorage\r\n                    localStorage.setItem(\"ratio\", +e.target.getAttribute(\"data-ratio\"));\r\n                } else {\r\n                    sex = e.target.getAttribute(\"id\");\r\n                    localStorage.setItem(\"sex\", e.target.getAttribute(\"id\"));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                // добавляем класс активности элементу, на котором сработал клик\r\n                e.target.classList.add(activeClass);\r\n\r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    // так как у нас 2 родительских элемента, вызываем функцию для каждого \r\n    getStaticInformation(\"#gender div\", \"calculating__choose-item_active\");\r\n    getStaticInformation(\".calculating__choose_big div\", \"calculating__choose-item_active\");\r\n\r\n    // получаем данные динамических элементов \r\n    function getDinamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener(\"input\", () => {\r\n            if(input.value.match(/\\D/g)) { // не число\r\n                input.style.border = \"1px solid red\"; // типа ошибка\r\n            } else {\r\n                input.style.border = \"none\";\r\n            }\r\n            switch(input.getAttribute(\"id\")) {\r\n                case \"height\": \r\n                    height = +input.value;\r\n                    break;\r\n                case \"weight\": \r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\": \r\n                    age = +input.value;\r\n                    break;\r\n            } \r\n            calcTotal();\r\n        }); \r\n    }\r\n\r\n    // вызываем ыункцию для каждого из селекторов\r\n    getDinamicInformation(\"#height\");\r\n    getDinamicInformation(\"#weight\");\r\n    getDinamicInformation(\"#age\");\r\n}\r\n\r\nexport default calc;","import { getResource } from \"../services/services\";\r\nfunction cards() {\r\n    class Card {\r\n        constructor(img, alt, name, text, price) {\r\n            this.img = img;\r\n            this.alt = alt;\r\n            this.name = name;\r\n            this.text = text;\r\n            this.price = price;\r\n            this.transfer = 105;\r\n            this.changeToRub();\r\n        }\r\n\r\n        changeToRub() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        renderCard() {\r\n            const menu = document.querySelector(\".menu__field .container\");\r\n            menu.innerHTML += `\r\n                <div class=\"menu__item\">\r\n                    <img src=\"${this.img}\" alt=\"${this.alt}\">\r\n                    <h3 class=\"menu__item-subtitle\">${this.name}</h3>\r\n                    <div class=\"menu__item-descr\">${this.text}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> руб/день</div>\r\n                    </div>\r\n                </div>\r\n            `\r\n        }\r\n    }\r\n\r\n    /* заменяем ручной ввод на запрос данных с сервера \r\n    const vargyText = `Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. \r\n    Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!`;\r\n    const eliteText = `В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное \r\n    исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!`;\r\n    const postText = `Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов\r\n    животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков \r\n    за счет тофу и импортных вегетарианских стейков.`; */ \r\n\r\n   /* === Тоже самое что и код ниже, но длинне ===\r\n    const vegy = new Card(\"img/tabs/vegy.jpg\", \"vegy\", \"Фитнес\", vargyText, 2500);\r\n    const elite = new Card(\"img/tabs/elite.jpg\", \"elite\", \"Премиум\", eliteText, 5500);\r\n    const post = new Card(\"img/tabs/post.jpg\", \"post\", \"Постное\", postText, 4300);\r\n\r\n    vegy.renderCard();\r\n    elite.renderCard();\r\n    post.renderCard(); */\r\n\r\n    /* заменяем ручной ввод атрибутов на запрос данных с сервера \r\n    new Card(\r\n        \"img/tabs/vegy.jpg\", \r\n        \"vegy\", \r\n        \"Фитнес\", \r\n        vargyText, \r\n        20).renderCard();\r\n\r\n    new Card(\r\n        \"img/tabs/elite.jpg\", \r\n        \"elite\", \r\n        \"Премиум\", \r\n        eliteText, \r\n        50).renderCard();\r\n\r\n    new Card(\r\n        \"img/tabs/post.jpg\", \r\n        \"post\", \r\n        \"Постное\", \r\n        postText, \r\n        30).renderCard(); */ \r\n\r\n    // обрахаемся к серверу и получаем данные массива меню\r\n    getResource(\"http://localhost:3000/menu\")\r\n        .then(data => {\r\n            // перебираем все объекты в массиве меню\r\n            data.forEach(({img, altimg, title, descr, price}) => {\r\n                // через renderCard создаем карточки \r\n                new Card(img, altimg, title, descr, price).renderCard();\r\n            });\r\n        });\r\n\r\n}\r\n\r\nexport default cards;","import { closeModal, openModal } from \"./modal\";\r\nimport { postData } from \"../services/services\";\r\n\r\nfunction forms(formSelector, modalTimer){\r\n    // отправляем данные из формы обратной связи на сервер \r\n    const forms = document.querySelectorAll(formSelector);\r\n\r\n    // ответы для пользователя \r\n    const message = {\r\n        loading: \"./icons/spinner.svg\",\r\n        success: \"Спасибо! Скоро мы с вами свяжемся\",\r\n        failure: \"Что-то пошло не так...\"\r\n    };\r\n\r\n    // для всех форм обратной связи вызывем функцию postData\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    })\r\n\r\n    \r\n\r\n    function bindPostData(form) {\r\n        form.addEventListener(\"submit\", (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement(\"img\"); // создаем img\r\n            statusMessage.src = message.loading; // добавляем картинке атрибу с ссылкой на спиннер \r\n            // добавляем стили для картикни, но лучше делать это через добавление класса \r\n            statusMessage.style.cssText = ` \r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // добавляем спиннер в форму \r\n            //form.append(statusMessage);\r\n            form.insertAdjacentElement(\"afterend\", statusMessage);\r\n\r\n           /* ==== заменяем на fetch ====\r\n            const request = new XMLHttpRequest();\r\n            request.open(\"POST\", \"server.php\"); \r\n            request.setRequestHeader(\"Content-type\", \"multipart/form-data\"); // когда используем связку XMLHttpRequest() + FormData() нам не нужно устанавливать заголовок \r\n            request.setRequestHeader(\"Content-type\", \"application/json\"); // но если нам надо поменять формат данных и отправлят на сервер json прописываем \"application/json\" */\r\n            \r\n            const formData = new FormData(form);\r\n\r\n            /* превращаем formData в json -- старый метод\r\n            const obj = {}; // создаем пустой объект \r\n            formData.forEach((valye, key) => { // перебираем formData\r\n                obj[key] = valye; // и помещаем все данные из formData в obj\r\n            }) */ \r\n\r\n            // превращаем formData в json -- новый метод\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()))\r\n\r\n            /* === заменяем на fetch ===\r\n            request.send(json); */ \r\n\r\n            /* заменяем функцией postData()\r\n            fetch(\"server.php\", {\r\n                method: \"POST\",\r\n                headers:  {\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(obj) // конвертируем объект в json\r\n            }) */ \r\n            postData(\"http://localhost:3000/requests\", json)\r\n            .then(data => { // data - то, что возвращает сервер\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove(); // удаляем сообщение \r\n            }).catch(() => {\r\n                showThanksModal(message.failure)\r\n            }).finally(() => {\r\n                form.reset(); // очистка формы в любом случае\r\n            });\r\n\r\n            /* ==== заменяем на fetch ====\r\n            request.addEventListener(\"load\", () => {\r\n                if (request.status === 200) {\r\n                    console.log(request.response);\r\n                    showThanksModal(message.success);\r\n                    form.reset(); // очистка формы после успешной отправки\r\n                    statusMessage.remove(); // удаляем сообщение \r\n                    \r\n                } else {\r\n                    showThanksModal(message.failure)\r\n                }\r\n            }) */ \r\n        });\r\n    }\r\n\r\n    // функция для показа статуса отправки данных на сервер\r\n    function showThanksModal(message){\r\n        // работаем с уже существующим модальным окном \r\n        const modalContent = document.querySelector(\".modal__dialog\"); \r\n        // скрываем его содержимое \r\n        modalContent.classList.add(\"hide\");\r\n        openModal(\".modal\", modalTimer);\r\n\r\n        // создаем новый див и добавляем в него нужную разметку \r\n        const thanksModal = document.createElement(\"div\");\r\n        thanksModal.classList.add(\"modal__dialog\");\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div data-close class=\"modal__close\">&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n        document.querySelector('.modal').append(thanksModal);\r\n\r\n        // через 4 секунды удаляем созданный контент + возвращаем контент нашей изначальной формы + закрываем модальное окно\r\n        setTimeout(() => {\r\n            thanksModal.remove();\r\n            modalContent.classList.add(\"show\");\r\n            modalContent.classList.remove(\"hide\");\r\n            closeModal(\".modal\");\r\n        }, 4000);\r\n    }\r\n\r\n    // запрос через json-server\r\n    fetch(\"http://localhost:3000/menu\")\r\n        .then(data => data.json())\r\n        .then(res => console.log(res))\r\n}\r\n\r\nexport default forms;","function openModal(modalSelector, modalTimer) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add(\"show\");\r\n    modal.classList.remove(\"hide\");\r\n    document.body.style.overflow = 'hidden'; // запрещаем прокрутку страницы при открытом модальном окне\r\n\r\n    if(modalTimer) { // если в функцию openModal передаем второй аргумент (modalTimer), сработает удаление таймера\r\n        clearInterval(modalTimer); // если пользователь сам открыл модальное окно, удаляем автоматическое открытие \r\n    }\r\n}\r\n    \r\n\r\nfunction closeModal(modalSelector) {\r\n    const modal = document.querySelector(modalSelector);\r\n    modal.classList.add(\"hide\");\r\n    modal.classList.remove(\"show\");\r\n    document.body.style.overflow = '';\r\n}\r\n\r\nfunction modal(triggerSelector, modalSelector, modalTimer){\r\n    const modalsBntOpen = document.querySelectorAll(triggerSelector);\r\n    const modal = document.querySelector(modalSelector);\r\n    // const modalsBntClose = document.querySelector(\"[data-close]\");\r\n\r\n    modalsBntOpen.forEach(item => {\r\n        item.addEventListener(\"click\", () => openModal(modalSelector, modalTimer)); \r\n        // так как мы не должны сразу вызывать колбэк функцию в обработчике события, но нам надо передать аргумент -- прописываем срелочную функцию\r\n    });\r\n\r\n    // т.к. дальше в коде мы создаем еще один крестик динамически, closeModal на нем не сработает \r\n    // modalsBntClose.addEventListener(\"click\", closeModal); \r\n\r\n    // закрытие модального окна при клике на темную подложку + элемент с отрибутом \"data-close\" (наш крестик)\r\n    modal.addEventListener(\"click\", (e) => {\r\n        // если мы кликаем на темную подложку или на элемент с отрибутом \"data-close\" (наш крестик)\r\n        if (e.target === modal || e.target.getAttribute(\"data-close\") == \"\") {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n    // закрытие модального окна при нажатии на Escape\r\n    document.addEventListener(\"keydown\", (e) => {\r\n        if (e.code === \"Escape\" && modal.classList.contains(\"show\")) {\r\n            closeModal(modalSelector);\r\n        }\r\n    });\r\n\r\n\r\n\r\n    // автоматическое открытие модального окна когда пользователь долистал до конца сайта\r\n    function showModalByScroll() {\r\n        // количество пикселей, которые уже проскроллены + видимая часть сайта >= \r\n        // высоты содержимого элемента, включая содержимое, не видимое на экране из-за переполнения.\r\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            openModal(modalSelector, modalTimer);\r\n            window.removeEventListener(\"scroll\", showModalByScroll); // удаляем обработчик события после открытия окна, \r\n            // что бы открытие сработало один раз, а не каждый раз как пользователь долистывает до конца\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", showModalByScroll);\r\n}\r\n\r\nexport default modal;\r\nexport {openModal, closeModal};","import { getZerro } from \"./timer\";\r\nfunction slider({container, slide, rowNext, rowPrev, totalCounter, currentCounter, wrapper, field}){\r\n    const sliderContent = document.querySelector(container);\r\n    const slider = sliderContent.querySelector(wrapper);\r\n    const sliderInner = slider.querySelector(field);\r\n    const width = window.getComputedStyle(slider).width; // ширина 1 слайда\r\n    const sliderItem = slider.querySelectorAll(slide);\r\n    const rowRight = sliderContent.querySelector(rowNext);\r\n    const rowLeft = sliderContent.querySelector(rowPrev);\r\n    const currentNumber = sliderContent.querySelector(currentCounter);\r\n    const totalNumber = sliderContent.querySelector(totalCounter);\r\n\r\n/* === простой слайдер === \r\n    sliderItem.forEach((item) => {\r\n        item.classList.add(\"hide\")\r\n    })\r\n\r\n    let index = 0;\r\n    totalNumber.innerHTML = getZerro(sliderItem.length);\r\n\r\n    function sliderShowImg(index) {\r\n        sliderItem[index].classList.remove(\"hide\");\r\n        sliderItem[index].classList.add(\"show\");\r\n        currentNumber.innerHTML = getZerro(index + 1);\r\n    }\r\n\r\n    sliderShowImg(index);\r\n\r\n    function sliderHideImg(index) {\r\n        sliderItem[index].classList.remove(\"show\");\r\n        sliderItem[index].classList.add(\"hide\");\r\n    }\r\n\r\n    rowRight.addEventListener(\"click\", () => {\r\n        sliderHideImg(index);\r\n        index += 1;\r\n        if(index > sliderItem.length - 1) {\r\n            index = 0;\r\n        }\r\n        sliderShowImg(index);\r\n    })\r\n\r\n    rowLeft.addEventListener(\"click\", () => {\r\n        sliderHideImg(index);\r\n        index -= 1;\r\n        if(index < 0) {\r\n            index = sliderItem.length - 1;\r\n        }\r\n        sliderShowImg(index);\r\n    }) */ \r\n    \r\n\r\n    // кол-во слайдов * 100% -- получаем ширину, в которую поместятся все слайды \r\n    sliderInner.style.width = 100 * sliderItem.length + \"%\";\r\n    sliderInner.style.display = \"flex\";\r\n    sliderInner.style.transition = \"0.5s all\";\r\n    // скрываем переполнение слайдера, чтобы видно было только один слайд \r\n    slider.style.overflow = \"hidden\";\r\n    // устанавливаем всем слайдам одинаковую ширину \r\n    sliderItem.forEach(item => item.style.width = width);\r\n\r\n    sliderContent.style.position = \"relative\";\r\n\r\n    // создаем блок с точками-индикаторами\r\n    const indicator = document.createElement(\"ol\");\r\n    const dots = [];\r\n\r\n    indicator.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n\r\n    sliderContent.append(indicator);\r\n\r\n    for (let i = 0; i < sliderItem.length; i++) {\r\n        const dot = document.createElement(\"li\");\r\n        dot.setAttribute(\"data-slide-to\", i);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n\r\n        if( i == 0) {\r\n            dot.style.opacity = 1; \r\n        }\r\n\r\n        indicator.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    let index = 0;\r\n    let offset = 0; // сюда будем записывать на сколько мы передвинулись по слайдеру  \r\n\r\n    totalNumber.innerHTML = getZerro(sliderItem.length);\r\n    currentNumber.innerHTML = getZerro(index + 1);\r\n\r\n    rowRight.addEventListener(\"click\", () => {\r\n        if (offset == Number.parseInt(width, 10) * (sliderItem.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            offset += Number.parseInt(width, 10);\r\n        }\r\n        sliderInner.style.transform = `translateX(-${offset}px)`;\r\n        \r\n        if(index == sliderItem.length - 1) {\r\n            index = 0;\r\n        } else {\r\n            index += 1;\r\n        }\r\n\r\n        currentNumber.innerHTML = getZerro(index + 1);\r\n        dots.forEach(dot => dot.style.opacity = \".5\");\r\n        dots[index].style.opacity = 1;\r\n    });\r\n\r\n    rowLeft.addEventListener(\"click\", () => {\r\n        if (offset == 0) {\r\n            offset = Number.parseInt(width, 10) * (sliderItem.length - 1);\r\n        } else {\r\n            offset -= Number.parseInt(width, 10);\r\n        }\r\n        sliderInner.style.transform = `translateX(-${offset}px)`\r\n\r\n        if(index <= 0) {\r\n            index = sliderItem.length - 1;\r\n        } else {\r\n            index -= 1;\r\n        }\r\n\r\n        currentNumber.innerHTML = getZerro(index + 1);\r\n        dots.forEach(dot => dot.style.opacity = \".5\");\r\n        dots[index].style.opacity = 1;\r\n    });\r\n\r\n    dots.forEach(item => {\r\n        item.addEventListener(\"click\", (e) => {\r\n            const slideTo = +e.target.getAttribute(\"data-slide-to\");\r\n            index = slideTo;\r\n            offset = Number.parseInt(width, 10) * (slideTo);\r\n\r\n            sliderInner.style.transform = `translateX(-${offset}px)`;\r\n\r\n            currentNumber.innerHTML = getZerro(index + 1);\r\n\r\n            dots.forEach(dot => dot.style.opacity = \".5\");\r\n            dots[index].style.opacity = 1;\r\n\r\n        });\r\n    });\r\n}\r\n\r\nexport default slider;","function tabs(tabsSelector, tabsContentSelector, tabsParentSelector, activeClass) {\r\n    const tabsParent = document.querySelector(tabsParentSelector);\r\n    const tabs = tabsParent.querySelectorAll(tabsSelector); \r\n    const tabsContent = document.querySelectorAll(tabsContentSelector);\r\n\r\n    function hideTabsContent() {\r\n        tabsContent.forEach(item => {\r\n            item.classList.remove(\"show\", \"fade\");\r\n            item.classList.add(\"hide\");\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove(activeClass);\r\n        });\r\n    }\r\n\r\n    hideTabsContent();\r\n\r\n    function showTabsContent (i = 0) {\r\n        tabsContent[i].classList.remove(\"hide\");\r\n        tabsContent[i].classList.add(\"show\", \"fade\");\r\n        tabs[i].classList.add(activeClass);\r\n    }\r\n\r\n    showTabsContent();\r\n\r\n    tabsParent.addEventListener(\"click\", (e) => {\r\n        const target = e.target;\r\n        if (target && target.classList.contains(tabsSelector.slice(1))) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) { // если эвент совпал с элементом\r\n                    hideTabsContent();\r\n                    showTabsContent(i);\r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport default tabs;","   // подставляем 0 перед числом меньше 10 (8 => 08)\r\nfunction getZerro(num) {\r\n    if (num >= 0 && num < 10) {\r\n        return `0${num}`;\r\n    } else {\r\n        return num;\r\n    }\r\n}\r\nfunction timer(id, deadline) {\r\n    // deadline переносим в script.js в вызов timer()\r\n    //const deadline = \"2024-12-31\"; // дата не прошла - время по Гринвичу \r\n   //const deadline = \"2024-10-01\"; // дата прошла - время по Гринвичу \r\n   //const deadline = \"December 31, 2024\"; // дата не прошла - мое время \r\n\r\n   // определение разницы между дедлайном и текущей датой\r\n   function getTimeRemaining(endtime) {\r\n       let t = Date.parse(endtime) - Date.parse(new Date()); // кол-во миллисекунд в endtime - кол-во миллисекунд текущей даты\r\n       let days;\r\n       let hours;\r\n       let minutes;\r\n       let seconds;\r\n\r\n       if (t <= 0) { // если дедлайн прошел, присвоиваем данным 0, чтобы при загрузке страницы не отображались отрицательные значения \r\n           days = 0;\r\n           hours = 0;\r\n           minutes = 0;\r\n           seconds = 0;\r\n       } else {\r\n           days = Math.floor(t / (1000 * 60 * 60 * 24));\r\n           hours = Math.floor((t / (1000 * 60 * 60)) % 24);\r\n           minutes = Math.floor((t / (1000 * 60)) % 60);\r\n           seconds = Math.floor((t / 1000) % 60);\r\n       }\r\n\r\n       return { // функция возвращает обьект в котором на основе расчетов получены отдельные данные.\r\n           \"total\": t,\r\n           \"days\": days,\r\n           \"hours\": hours,\r\n           \"minutes\": minutes,\r\n           \"seconds\": seconds\r\n       };\r\n   }\r\n\r\n   // функция установки таймера на странице\r\n   function setClock(selector, endtime) {\r\n       const timer = document.querySelector(selector);\r\n       const days = timer.querySelector(\"#days\");\r\n       const hours = timer.querySelector(\"#hours\");\r\n       const minutes = timer.querySelector(\"#minutes\");\r\n       const seconds = timer.querySelector(\"#seconds\");\r\n       const timeInterval = setInterval(updateClock, 1000);\r\n\r\n       updateClock(); //запускается тут, что бы не было скачков при перезагрузке страницы и она начинала действовать с момента загрузки\r\n\r\n       function updateClock() {\r\n           const t = getTimeRemaining(endtime);\r\n\r\n           days.innerHTML = getZerro(t.days);\r\n           hours.innerHTML = getZerro(t.hours);\r\n           minutes.innerHTML = getZerro(t.minutes);\r\n           seconds.innerHTML = getZerro(t.seconds);\r\n\r\n           // останавливаем таймер\r\n           if (t.total <= 0) {\r\n               clearInterval(timeInterval);\r\n           }\r\n       }\r\n   }\r\n\r\n   setClock(id, deadline);\r\n}\r\n\r\nexport default timer;\r\nexport {getZerro}","// гибкая настройка запроса на сервер (не привязываемся к url)\r\nconst postData = async (url, data) => { // async -- указывает, что внутри функции будет асинхронный  код\r\n    const result = await fetch(url, { // await -- пара для async  -- скрипт пойдет работать дальше только после выполнения запроса с await\r\n        method: \"POST\",\r\n        headers:  {\r\n            \"Content-type\": \"application/json\"\r\n        },\r\n        body: data\r\n    });\r\n    return await result.json() // возвращаем промис в json формате\r\n}\r\n\r\n// гибкая настройка запроса данных с сервер (не привязываемся к url)\r\nconst getResource = async (url) => { // async -- указывает, что внутри функции будет асинхронный  код\r\n    const result = await fetch(url); // await -- пара для async  -- скрипт пойдет работать дальше только после выполнения запроса с await  \r\n    // если fetch столкнется с ошибкой HTTP запроса (404, 500, 502...) он не выдаст catch\r\n    // поэтому такие ошибки мы обрабатываем вручную\r\n    if(!result.ok) {\r\n        throw new Error(`Не получается произвести fetch ${url}, status: ${res.status}`); \r\n    }\r\n    \r\n    return await result.json(); // возвращаем промис в json формате\r\n}\r\n\r\nexport {postData};\r\nexport {getResource}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import tabs from \"./modules/tabs\";\r\nimport modal from \"./modules/modal\";\r\nimport timer from \"./modules/timer\";\r\nimport cards from \"./modules/cards\";\r\nimport calc from \"./modules/calc\";\r\nimport forms from \"./modules/forms\";\r\nimport sloder from \"./modules/slider\";\r\nimport { openModal } from \"./modules/modal\";\r\n\r\nwindow.addEventListener(\"DOMContentLoaded\", ()=>{\r\n    // автоматическое открытие модального окна через заданное время\r\n    const modalTimer = setTimeout(() => openModal(\".modal\", modalTimer), 50000);\r\n    \r\n\r\n    tabs(\".tabheader__item\", \".tabcontent\",  \".tabheader__items\", \"tabheader__item_active\");\r\n    modal(\"[data-modal]\", \".modal\", modalTimer);\r\n    timer(\".timer\", \"December 31, 2024\");\r\n    cards();\r\n    calc();\r\n    forms(\"form\", modalTimer);\r\n    sloder({\r\n        container: \".offer__slider\",\r\n        rowNext: \".offer__slider-next\",\r\n        rowPrev: \".offer__slider-prev\",\r\n        slide: \".offer__slide\",\r\n        totalCounter: \"#total\",\r\n        currentCounter: \"#current\",\r\n        wrapper: \".offer__slider-wrapper\",\r\n        field: \".offer__slider-inner\"\r\n    });\r\n\r\n    \r\n\r\n});"],"names":[],"sourceRoot":""}